---
import { getCollection } from "astro:content";

const firstChar = (str: string) => String.fromCodePoint(str.codePointAt(0)!);

const docs = await getCollection("docs");
type Docs = typeof docs;
const docsByChar = new Map<string, Docs>();
docs.forEach((doc) => {
  if (doc.data.tags) {
    const char = firstChar(doc.data.title).toUpperCase();
    docsByChar.set(char, docsByChar.get(char) || []);
    docsByChar.get(char)?.push(doc);
  }
});
const comparator = new Intl.Collator("en");
const charsSorted = [...docsByChar.keys()].sort(comparator.compare);
---

<script>
  // @ts-nocheck
  // because can't resolve this error
  // Type '{ children: Element; class: string; }' is not assignable to type 'DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>'.
  // Property 'class' does not exist on type 'DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>'. Did you mean 'className'?
</script>

<div class="column-list">
  <span>
    {
      charsSorted.map((char) => (
        <p>
          <b>{char}</b>
          <ul>
            {docsByChar.get(char)?.map((doc) => (
              <li>
                <a href={`/${doc.slug}`}>{doc.data.title}</a>
              </li>
            ))}
          </ul>
        </p>
      ))
    }
  </span>
</div>
