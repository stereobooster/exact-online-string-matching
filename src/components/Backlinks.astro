---
import { bdb } from "../lib/braindb.mjs";
import type { CollectionEntry } from "astro:content";
interface Props {
  entry: CollectionEntry<"docs">;
}
const { entry } = Astro.props;

const doc = await bdb.findDocument(`/${entry.id}`);
---

<script>
  // @ts-nocheck
  // because can't resolve this error
  // Type '{ children: Element; class: string; }' is not assignable to type 'DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>'.
  // Property 'class' does not exist on type 'DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>'. Did you mean 'className'?
</script>

<div class="backlinks">
  {
    doc && doc.documentsFrom().length > 0 && (
      <>
        <h2>Backlinks</h2>
        <ul>
          {doc.documentsFrom().map((x) => (
            <li>
              <a href={x.url()}>{x.title()}</a>
            </li>
          ))}
        </ul>
      </>
    )
  }
</div>

<style>
  .backlinks {
    h2 {
      padding-top: 1rem;
    }

    ul {
      padding: 0;
      list-style: none;
    }

    a {
      --pad-inline: 0.5rem;
      display: block;
      border-radius: 0.25rem;
      padding-block: 0.25rem;
      padding-inline: var(--pad-inline) var(--pad-inline);
      line-height: 1.25;
    }
  }
</style>
